name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for version changes
      id: version_check
      run: |
        # Check if package.json has changed
        if git diff HEAD^ HEAD --name-only | grep -q "package.json"; then
          echo "Package.json changed, checking version..."
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD^ -- package.json
          PREVIOUS_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD -- package.json
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "Package.json not changed"
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      if: steps.version_check.outputs.version_changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version_check.outputs.new_version }}
        release_name: v${{ steps.version_check.outputs.new_version }}
        body: |
          ## What's Changed
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.version_check.outputs.previous_version }}...v${{ steps.version_check.outputs.new_version }}
        draft: false
        prerelease: false
        
    - name: Trigger NPM Publish
      if: steps.version_check.outputs.version_changed == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'publish.yml',
            ref: 'main',
            inputs: {
              version: 'skip',
              tag: 'latest'
            }
          })